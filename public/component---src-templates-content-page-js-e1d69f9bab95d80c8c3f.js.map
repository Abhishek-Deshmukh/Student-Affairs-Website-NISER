{"version":3,"file":"component---src-templates-content-page-js-e1d69f9bab95d80c8c3f.js","mappings":"yqBAOe,SAASA,EAAT,GAAgC,IAATC,EAAQ,EAARA,KAChCC,EAAOD,EAAKE,eAE8B,uBAA1CF,EAAKE,eAAeC,YAAYC,QAClCH,EAAKI,KACH,oaAEJ,IAAMC,EAAWC,EAAAA,KAAU,SAAAC,GACzB,MAAO,CACLC,QAASD,EACTE,KACE,IAAMF,EAAEG,QAAQ,KAAM,KAAKA,QAAQ,KAAM,IAAIC,cAAgB,IAElE,IACD,GAA0BC,EAAAA,EAAAA,UAAS,IAA5BC,EAAP,KAAcC,EAAd,KAIA,OACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAKb,MAAOH,EAAKE,YAAYC,QAE7B,uBAAKc,UAAU,8BACb,yBACEC,KAAK,OACLC,YAAY,SACZF,UAAU,mBACVG,SAZkB,SAAAC,GACxBP,EAASO,EAAEC,OAAOC,MACnB,KAaIV,EAAMW,OAAS,EACd,gBAAC,IAAD,CAAQX,MAAOA,IAEf,uBAAKI,UAAU,qBACb,uBAAKA,UAAU,mBACb,uBAAKA,UAAU,OACb,yBAAOA,UAAU,wCACf,0BACGZ,EAASoB,KAAI,SAAAjB,GACZ,OACEA,EAAQA,QAAQkB,gBAChB1B,EAAKE,YAAYC,MAAMuB,cAAchB,QAAQ,KAAM,KAE5C,sBAAIiB,MAAO,CAAEC,QAAS,KAAQpB,EAAQA,SAG7C,0BACE,gBAAC,KAAD,CAAMqB,GAAIrB,EAAQC,MAAOD,EAAQA,SAGtC,MAGL,2BAASS,UAAU,wCACjB,0BAAKjB,EAAKE,YAAYC,OACtB,uBAAK2B,wBAAyB,CAAEC,OAAQ/B,EAAKI,YAQ5D,C","sources":["webpack://gatsby-starter-hello-world/./src/templates/content-page.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Layout from \"../components/Layout\"\r\nimport order from \"../contents/order.json\"\r\nimport SEO from \"../components/SEO\"\r\nimport Search from \"../components/search\"\r\n\r\nexport default function ContentPage({ data }) {\r\n  var post = data.markdownRemark\r\n  // the map page\r\n  if (data.markdownRemark.frontmatter.title === \"NISER Detailed Map\") {\r\n    post.html =\r\n      '<iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3745.1711091420616!2d85.68115061491841!3d20.168599886470606!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3a19aea875ebf9fd%3A0x44948bdac82e20ba!2sNISER%20JATNI%20MAIN%20GATE!5e0!3m2!1sen!2sin!4v1606559679721!5m2!1sen!2sin\" width=\"600\" height=\"450\" frameborder=\"0\" style=\"border:0;\" allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>'\r\n  }\r\n  const headings = order.map(x => {\r\n    return {\r\n      heading: x,\r\n      path:\r\n        \"/\" + x.replace(/ /g, \"-\").replace(/â€™/g, \"\").toLowerCase() + \"/\",\r\n    }\r\n  })\r\n  const [query, setQuery] = useState(\"\")\r\n  const handleQueryChange = e => {\r\n    setQuery(e.target.value)\r\n  }\r\n  return (\r\n    <Layout>\r\n      <SEO title={post.frontmatter.title} />\r\n\r\n      <div className=\"search-input-box-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\"search-input-box\"\r\n          onChange={handleQueryChange}\r\n        />\r\n      </div>\r\n      {query.length > 0 ? (\r\n        <Search query={query} />\r\n      ) : (\r\n        <div className=\"article-container\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <aside className=\"col-xl-3 col-lg-4 col-md-4 col-sm-12\">\r\n                <ul>\r\n                  {headings.map(heading => {\r\n                    if (\r\n                      heading.heading.toUpperCase() ===\r\n                      post.frontmatter.title.toUpperCase().replace(/-/g, \" \")\r\n                    ) {\r\n                      return <li style={{ opacity: 0.5 }}>{heading.heading}</li>\r\n                    }\r\n                    return (\r\n                      <li>\r\n                        <Link to={heading.path}>{heading.heading}</Link>\r\n                      </li>\r\n                    )\r\n                  })}\r\n                </ul>\r\n              </aside>\r\n              <article className=\"col-xl-8 col-lg-8 col-md-8 col-sm-12\">\r\n                <h1>{post.frontmatter.title}</h1>\r\n                <div dangerouslySetInnerHTML={{ __html: post.html }} />\r\n              </article>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    allMarkdownRemark {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["ContentPage","data","post","markdownRemark","frontmatter","title","html","headings","order","x","heading","path","replace","toLowerCase","useState","query","setQuery","Layout","SEO","className","type","placeholder","onChange","e","target","value","length","map","toUpperCase","style","opacity","to","dangerouslySetInnerHTML","__html"],"sourceRoot":""}